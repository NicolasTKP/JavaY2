/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.JavaY2.SalesManager;

import com.mycompany.JavaY2.Class.Item;
import com.mycompany.JavaY2.Class.Supplier;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.List;
import javax.swing.Box;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JPanel;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author User
 */
public class AddSupplier extends javax.swing.JFrame {

    /**
     * Creates new form add_supplier
     */
    public AddSupplier() {
        initComponents();
    }
    
    public String getGroupID(String supply_items, String inventory_file_path) {
        String lastGroupID = "G000"; // Default ID if none exists
        String group_id = null;

        try (BufferedReader br = new BufferedReader(new FileReader(inventory_file_path))) {
            String line;
            br.readLine(); // Skip header

            while ((line = br.readLine()) != null) {
                String[] itemColumns = line.split("\\|");

                if (itemColumns.length >= 2 && supply_items.equals(itemColumns[1])) {
                    return itemColumns[0]; // Return existing group_id if found
                }
                lastGroupID = itemColumns[0]; // Keep track of the last group_id
            }
        } catch (IOException e) {
            System.out.println("Error reading file: " + e.getMessage());
        }

        // Generate a new group ID if no match is found
        int lastNumber = Integer.parseInt(lastGroupID.substring(1)); // Extract number
        int newNumber = lastNumber + 1;
        group_id = String.format("G%03d", newNumber);

        return group_id;
    }    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_add_new_supplier = new javax.swing.JLabel();
        jLabel_supplier_name = new javax.swing.JLabel();
        jTextField_supplier_name = new javax.swing.JTextField();
        jLabel_address = new javax.swing.JLabel();
        jTextField_address = new javax.swing.JTextField();
        jLabel_contact = new javax.swing.JLabel();
        jTextField_contact_number = new javax.swing.JTextField();
        jLabel_supply_item = new javax.swing.JLabel();
        jTextField_payment_term = new javax.swing.JTextField();
        jButton_add_supplier = new javax.swing.JButton();
        jTextField_supply_item = new javax.swing.JTextField();
        jLabel_payment_term = new javax.swing.JLabel();
        jButton_cancel_add_supplier = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel_add_new_supplier.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel_add_new_supplier.setText("Add New Supplier");

        jLabel_supplier_name.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel_supplier_name.setText("Supplier Name: ");

        jTextField_supplier_name.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jTextField_supplier_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_supplier_nameActionPerformed(evt);
            }
        });

        jLabel_address.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel_address.setText("Address:");

        jTextField_address.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        jLabel_contact.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel_contact.setText("Contact Number:");

        jTextField_contact_number.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        jLabel_supply_item.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel_supply_item.setText("Supply Item(s):");

        jTextField_payment_term.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jTextField_payment_term.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_payment_termActionPerformed(evt);
            }
        });

        jButton_add_supplier.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton_add_supplier.setText("Add");
        jButton_add_supplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_add_supplierActionPerformed(evt);
            }
        });

        jTextField_supply_item.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jTextField_supply_item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_supply_itemActionPerformed(evt);
            }
        });

        jLabel_payment_term.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel_payment_term.setText("Payment Term:");

        jButton_cancel_add_supplier.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton_cancel_add_supplier.setText("Cancel");
        jButton_cancel_add_supplier.setToolTipText("");
        jButton_cancel_add_supplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_cancel_add_supplierActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_address)
                            .addComponent(jLabel_contact)
                            .addComponent(jLabel_supply_item)
                            .addComponent(jLabel_supplier_name)
                            .addComponent(jLabel_add_new_supplier)
                            .addComponent(jLabel_payment_term))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_payment_term)
                            .addComponent(jTextField_supplier_name, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                            .addComponent(jTextField_address)
                            .addComponent(jTextField_contact_number)
                            .addComponent(jTextField_supply_item)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addComponent(jButton_add_supplier, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addComponent(jButton_cancel_add_supplier, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel_add_new_supplier)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_supplier_name)
                    .addComponent(jTextField_supplier_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_address)
                    .addComponent(jTextField_address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_contact_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_contact))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_supply_item)
                    .addComponent(jTextField_supply_item, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_payment_term, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_payment_term))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_add_supplier)
                    .addComponent(jButton_cancel_add_supplier))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_supplier_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_supplier_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_supplier_nameActionPerformed

    private void jButton_add_supplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_add_supplierActionPerformed
        String supplier_file_path = "src\\main\\java\\com\\mycompany\\JavaY2\\TextFile\\suppliers";
        String item_file_path = "src\\main\\java\\com\\mycompany\\JavaY2\\TextFile\\items";
        String inventory_file_path = "src\\main\\java\\com\\mycompany\\JavaY2\\TextFile\\inventory";
        Supplier supplier = new Supplier();
        Item item = new Item();
        
        boolean isNewItemID = true;
        boolean isNewGroupID = true;
 
        while (true){
            String supplier_id = supplier.setSupplierID();
            
            String supplier_name = jTextField_supplier_name.getText();
            supplier.setSupplierName(supplier_name);
            
            String address = jTextField_address.getText();
            supplier.setAddress(address);
            
            String contact_number = jTextField_contact_number.getText();
            supplier.setContact(contact_number);
            
            String supply_items = jTextField_supply_item.getText();
            supplier.setSupplyItems(supply_items);
            
            String payment_term = jTextField_payment_term.getText();
            supplier.setPaymentTerm(payment_term);
            
            String group_id = getGroupID(supply_items, inventory_file_path);   
            
            if (supplier_name.isEmpty() || address.isEmpty()|| contact_number.isEmpty() || payment_term.isEmpty()){
                JOptionPane.showMessageDialog(null, "Please fill in all the required fields.");
            }
            
            try (BufferedReader supplier_br = new BufferedReader(new FileReader(supplier_file_path))) {
                String line;
            
                while ((line = supplier_br.readLine()) != null) {
                    String[] columns = line.split("\\|"); 
                
                    if (columns.length < 6){
                        continue;
                    } 
                
                    if (supplier_name.trim().equalsIgnoreCase(columns[1].trim()) && supply_items.trim().equalsIgnoreCase(columns[4].trim())) {
                        JOptionPane.showMessageDialog(null, "The entered item already supplied by an existed supplier. Please key in again");
                        return;
                        }
                }
            } catch (IOException e) {
                System.out.println("Error reading file: " + e.getMessage());
            }                  
            
//            try (BufferedReader item_br = new BufferedReader(new FileReader(item_file_path))) {
//                List<String> lines = item_br.lines().toList(); 
//                boolean foundMatch = false; 
//
//                for (String line : lines) {  
//                    String[] columns = line.split("\\|");
//
//                    if (columns.length >= 1 && supplier.setSupplyItems(supply_items).equalsIgnoreCase(columns[0])) {
//                        isNewItemID = false;
//                        foundMatch = true; 
//                        break; 
//                    }
//                }
//                if (!foundMatch) {
//                    JOptionPane.showMessageDialog(null, "No matching item found in supplier list.");
//                }
//            } catch (IOException e) {
//                JOptionPane.showMessageDialog(null, "Error reading inventory file: " + e.getMessage());
//            }
            
            try (BufferedReader br = new BufferedReader(new FileReader(inventory_file_path))) {
                String line;
                while ((line = br.readLine()) != null) {
                    String[] columns = line.split("\\|");
                    if (columns.length >= 1 && group_id.equalsIgnoreCase(columns[0])) {
                        isNewGroupID = false;  // Group ID already exists
                        break;
                    }
                }
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Error reading inventory file: " + e.getMessage());
            }
            
            double stock_price = 0.0;      
            int sales_per_day = 0;
            int ordering_lead_time = 0;
            int quantity = 0;
            double retail_price = 0.0;
            
//            if(isNewItemID){
                JSpinner jSpinner_stock_price = new JSpinner(new SpinnerNumberModel(0.0, 0.0, 10000.0, 0.1));
                JSpinner jSpinner_sales_per_day =  new JSpinner(new SpinnerNumberModel(0, 0, 1000, 1));
                JSpinner jSpinner_ordering_lead_time = new JSpinner(new SpinnerNumberModel(0, 0, 1000, 1));
                JSpinner jSpinner_quantity = new JSpinner(new SpinnerNumberModel(0, 0, 1000, 1));                
                JSpinner jSpinner_retail_price = new JSpinner(new SpinnerNumberModel(0.0, 0.0, 10000.0, 0.1));
                
                JPanel panel = new JPanel();
                
                panel.add(new JLabel("Stock Price: "));
                panel.add(jSpinner_stock_price);
                panel.add(Box.createVerticalStrut(10)); 
                 
                panel.add(new JLabel("Sales per day: "));            
                panel.add(jSpinner_sales_per_day);
                panel.add(Box.createVerticalStrut(10)); 
                
                panel.add(new JLabel("Ordering lead time: "));                  
                panel.add(jSpinner_ordering_lead_time);
                panel.add(Box.createVerticalStrut(10)); 
                
                panel.add(new JLabel("Quantity: "));                  
                panel.add(jSpinner_quantity);
                panel.add(Box.createVerticalStrut(10));  
                
                panel.add(new JLabel("Retail price: "));                  
                panel.add(jSpinner_retail_price);
                panel.add(Box.createVerticalStrut(10)); 
                
                int result = JOptionPane.showConfirmDialog(null, panel, "Enter Item Details", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
                
                if (result != JOptionPane.OK_OPTION) {
                    JOptionPane.showMessageDialog(this, "User cancelled input.");
                    return;
                }

                stock_price = (double) jSpinner_stock_price.getValue();
                stock_price = Double.parseDouble(String.format("%.2f", stock_price));
                
                sales_per_day = (int) jSpinner_sales_per_day.getValue();
                
                ordering_lead_time = (int) jSpinner_ordering_lead_time.getValue();

                quantity = (int) jSpinner_quantity.getValue();
                
                retail_price = (double) jSpinner_retail_price.getValue();
                retail_price = Double.parseDouble(String.format("%.2f", retail_price));
                
                if (stock_price < 0 || ordering_lead_time < 0 || retail_price <0) {
                    JOptionPane.showMessageDialog(this, "Stock price and ordering lead time must be greater than zero.");
                    return;
                }           
//            } 
            
            String supplier_details = supplier_id + "|" + supplier_name + "|" + address + "|" + contact_number + "|" + item.setItemID() + "|" + payment_term;
            
            String item_details = item.setItemID() + "|" + supply_items.toLowerCase() + "|" + stock_price + "|" + sales_per_day 
                                     + "|" + ordering_lead_time + "|" + item.setSafetyLevel(sales_per_day, ordering_lead_time) + "|" + supplier_id + "|" + group_id;                             
                
            String inventory_details = group_id + "|" + supply_items.toLowerCase() + "|" + quantity + "|" + retail_price;
            
            if (isNewGroupID) {
                
                try (BufferedWriter supplier_bw = new BufferedWriter(new FileWriter(supplier_file_path, true))){
                    supplier_bw.write(supplier_details + "\n");
                    this.dispose();
                }catch (IOException e){
                    JOptionPane.showMessageDialog(null, "Error writing to file: " + e.getMessage());
                }
                
                try (BufferedWriter item_bw = new BufferedWriter(new FileWriter(item_file_path, true))) {
                    item_bw.write(item_details + "\n");
                    this.dispose();
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, "Error writing to item file: " + e.getMessage());
                } 
                
                try (BufferedWriter inventory_bw = new BufferedWriter(new FileWriter(inventory_file_path, true))) {
                    inventory_bw.write(inventory_details + "\n");
                    this.dispose();
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, "Error writing to item file: " + e.getMessage());
                }                   
                JOptionPane.showMessageDialog(null, "New supplier, new item and new group ID has been added to the system.");
                break;      
                
            } else{
                
                try (BufferedWriter supplier_bw = new BufferedWriter(new FileWriter(supplier_file_path, true))){
                    supplier_bw.write(supplier_details + "\n");
                    this.dispose();
                }catch (IOException e){
                    JOptionPane.showMessageDialog(null, "Error writing to file: " + e.getMessage());
                }
                
                try (BufferedWriter item_bw = new BufferedWriter(new FileWriter(item_file_path, true))) {
                    item_bw.write(item_details + "\n");
                    this.dispose();
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, "Error writing to item file: " + e.getMessage());
                }
                
                JOptionPane.showMessageDialog(null, "New supplier and new item has been added to the system.");
                break;    

            }                
        }
    }//GEN-LAST:event_jButton_add_supplierActionPerformed

    private void jTextField_payment_termActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_payment_termActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_payment_termActionPerformed

    private void jTextField_supply_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_supply_itemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_supply_itemActionPerformed

    private void jButton_cancel_add_supplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_cancel_add_supplierActionPerformed
        new SupplierEntry().setVisible(true);
    }//GEN-LAST:event_jButton_cancel_add_supplierActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddSupplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddSupplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddSupplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddSupplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddSupplier().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_add_supplier;
    private javax.swing.JButton jButton_cancel_add_supplier;
    private javax.swing.JLabel jLabel_add_new_supplier;
    private javax.swing.JLabel jLabel_address;
    private javax.swing.JLabel jLabel_contact;
    private javax.swing.JLabel jLabel_payment_term;
    private javax.swing.JLabel jLabel_supplier_name;
    private javax.swing.JLabel jLabel_supply_item;
    private javax.swing.JTextField jTextField_address;
    private javax.swing.JTextField jTextField_contact_number;
    private javax.swing.JTextField jTextField_payment_term;
    private javax.swing.JTextField jTextField_supplier_name;
    private javax.swing.JTextField jTextField_supply_item;
    // End of variables declaration//GEN-END:variables
}
