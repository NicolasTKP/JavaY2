/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.JavaY2.SalesManager;

import com.mycompany.JavaY2.Class.Item;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author User
 */
public class AddItem extends javax.swing.JFrame {
    
    private final Map<String, List<String>> itemSupplierMap = new HashMap<>();
    String supplier_file_path = "src/main/java/com/mycompany/JavaY2/TextFile/suppliers";
    /**
     * Creates new form add_item
     */
    public AddItem() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel_item_name = new javax.swing.JLabel();
        jLabel_retail_price = new javax.swing.JLabel();
        jLabel_stock_price = new javax.swing.JLabel();
        jLabel_low_stock_benchmark = new javax.swing.JLabel();
        jTextField_item_name = new javax.swing.JTextField();
        jTextField_stock_price = new javax.swing.JTextField();
        jButton_add_supplier = new javax.swing.JButton();
        jLabel_low_stock_benchmark1 = new javax.swing.JLabel();
        jTextField_supplier = new javax.swing.JTextField();
        jLabel_low_stock_benchmark2 = new javax.swing.JLabel();
        jSpinner_sales_per_day = new javax.swing.JSpinner();
        jSpinner_ordering_lead_time = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Add New Item");

        jLabel_item_name.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel_item_name.setText("Item Name: ");

        jLabel_retail_price.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel_retail_price.setText("Sales Per Day:");

        jLabel_stock_price.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel_stock_price.setText("Stock Price:");

        jLabel_low_stock_benchmark.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel_low_stock_benchmark.setText("Ordering Lead ");

        jTextField_item_name.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jTextField_item_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_item_nameActionPerformed(evt);
            }
        });

        jTextField_stock_price.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        jButton_add_supplier.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton_add_supplier.setText("Add");
        jButton_add_supplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_add_supplierActionPerformed(evt);
            }
        });

        jLabel_low_stock_benchmark1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel_low_stock_benchmark1.setText("Supplier:");

        jTextField_supplier.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        jLabel_low_stock_benchmark2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel_low_stock_benchmark2.setText("Times (Days):");

        jSpinner_sales_per_day.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        jSpinner_ordering_lead_time.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_stock_price)
                            .addComponent(jLabel1))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_item_name)
                            .addComponent(jLabel_retail_price)
                            .addComponent(jLabel_low_stock_benchmark2)
                            .addComponent(jLabel_low_stock_benchmark)
                            .addComponent(jLabel_low_stock_benchmark1))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_supplier, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_stock_price, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_item_name, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_add_supplier, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner_sales_per_day, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner_ordering_lead_time, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 94, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_item_name)
                    .addComponent(jTextField_item_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_stock_price)
                    .addComponent(jTextField_stock_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_retail_price)
                    .addComponent(jSpinner_sales_per_day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel_low_stock_benchmark)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_low_stock_benchmark2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(jLabel_low_stock_benchmark1))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSpinner_ordering_lead_time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jTextField_supplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(60, 60, 60)
                .addComponent(jButton_add_supplier)
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_item_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_item_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_item_nameActionPerformed

    private void jButton_add_supplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_add_supplierActionPerformed
        String file_path = "src\\main\\java\\com\\mycompany\\JavaY2\\TextFile\\items";
        String inventory_file_path = "src\\main\\java\\com\\mycompany\\JavaY2\\TextFile\\inventory";
        boolean isNewGroupID = true;

        Item item = new Item();

        while(true){

            String item_id = item.setItemID();

            String item_name = jTextField_item_name.getText();
            item.setItemName(item_name);
            
            String input_stock_price = jTextField_stock_price.getText();
            item.setStockPrice(input_stock_price);

            int sales_per_day = (int) jSpinner_sales_per_day.getValue();
            item.setSalesPerDay(sales_per_day);
            
            int ordering_lead_time = (int) jSpinner_ordering_lead_time.getValue();
            item.setOrderingLeadTime(ordering_lead_time);
            
            int safety_level = item.setSafetyLevel(sales_per_day, ordering_lead_time);
            
            String supplier_id = jTextField_supplier.getText();
            item.setSupplierID(supplier_id);
            
            String group_id = item.setGroupID();
            
            if (item_name.isEmpty() || input_stock_price.isEmpty() || supplier_id.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill in all the fields.");
                return;
            }
            
            try (BufferedReader br = new BufferedReader(new FileReader(file_path))) {
            String line;

            while ((line = br.readLine()) != null) {
                String[] columns = line.split("\\|"); 
                
                if (columns.length < 8){
                    continue;
                } 
                if (item_name.trim().equalsIgnoreCase(columns[1].trim()) && item.getSupplierID().equalsIgnoreCase(columns[6])) {
                    JOptionPane.showMessageDialog(null, "The entered item already supplied by the supplier. Please key in again");
                    return;
                    }
                }
            } catch (IOException e) {
                System.out.println("Error reading file: " + e.getMessage());
            }
            
            try (BufferedReader br = new BufferedReader(new FileReader(inventory_file_path))) {
                String line;
                while ((line = br.readLine()) != null) {
                    String[] columns = line.split("\\|");
                    if (columns.length >= 1 && group_id.equalsIgnoreCase(columns[0])) {
                        isNewGroupID = false;  // Group ID already exists
                        break;
                    }
                }
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Error reading inventory file: " + e.getMessage());
            }  
            
            int quantity = 0;
            double retail_price = 0.0;        
            
            if (isNewGroupID) {
                JSpinner jSpinner_quantity = new JSpinner(new SpinnerNumberModel(0, 0, 1000, 1));
                JSpinner jSpinner_retail_price = new JSpinner(new SpinnerNumberModel(0.0, 0.0, 10000.0, 0.1));

                JPanel panel = new JPanel();
                panel.add(new JLabel("Quantity: "));
                panel.add(jSpinner_quantity);
                panel.add(new JLabel("Retail Price: "));
                panel.add(jSpinner_retail_price);

                // Show JOptionPane with the Panel
                int result = JOptionPane.showConfirmDialog(null, panel, "Enter Item Details", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

                if (result != JOptionPane.OK_OPTION) {
                    JOptionPane.showMessageDialog(this, "User cancelled input.");
                    return;
                }

                quantity = (int) jSpinner_quantity.getValue();
                retail_price = (double) jSpinner_retail_price.getValue();

                if (quantity < 0 || retail_price < 0) {
                    JOptionPane.showMessageDialog(this, "Quantity and Retail Price must be greater than zero.");
                    return;
                }
            }     
            
            String item_details = item_id + "|" + item_name.toLowerCase() + "|" + input_stock_price + "|" + sales_per_day + "|" + ordering_lead_time 
                    + "|" + safety_level + "|" + supplier_id + "|" + group_id;
                                  
            try (BufferedWriter bw = new BufferedWriter(new FileWriter(file_path, true))){
                bw.write(item_details + "\n");
                JOptionPane.showMessageDialog(null, "Item added successfully");
                this.dispose();

                if (isNewGroupID) {
                    String inventory_details = group_id + "|" + item_name.toLowerCase() + "|" + quantity + "|" + retail_price;
                    try (BufferedWriter inventory_bw = new BufferedWriter(new FileWriter(inventory_file_path, true))) {
                        inventory_bw.write(inventory_details + "\n");
                        JOptionPane.showMessageDialog(null, "New item group ID is added");
                        this.dispose();
                    } catch (IOException e) {
                        JOptionPane.showMessageDialog(null, "Error writing to inventory file: " + e.getMessage());
                    }
                }
                break;
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Error writing to file: " + e.getMessage());
            }
            
        }
    }//GEN-LAST:event_jButton_add_supplierActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddItem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_add_supplier;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel_item_name;
    private javax.swing.JLabel jLabel_low_stock_benchmark;
    private javax.swing.JLabel jLabel_low_stock_benchmark1;
    private javax.swing.JLabel jLabel_low_stock_benchmark2;
    private javax.swing.JLabel jLabel_retail_price;
    private javax.swing.JLabel jLabel_stock_price;
    private javax.swing.JSpinner jSpinner_ordering_lead_time;
    private javax.swing.JSpinner jSpinner_sales_per_day;
    private javax.swing.JTextField jTextField_item_name;
    private javax.swing.JTextField jTextField_stock_price;
    private javax.swing.JTextField jTextField_supplier;
    // End of variables declaration//GEN-END:variables
}
