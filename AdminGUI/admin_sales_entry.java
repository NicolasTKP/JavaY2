/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.JavaY2.AdminGUI;

import com.mycompany.JavaY2.Class.*;
import com.mycompany.JavaY2.Object.DailySale;
import com.mycompany.JavaY2.Object.ObjectList;
import com.mycompany.JavaY2.Object.SessionManager;
import com.mycompany.JavaY2.Object.Supplier;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.List;

/**
 *
 * @author acer
 */
public class admin_sales_entry extends javax.swing.JFrame {

    /**
     * Creates new form admin_sales_entry
     */
    public admin_sales_entry() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ObjectList objectList = new ObjectList();
        List<DailySale> daily_sales = objectList.getDailySales();
        String[][] matrix = new String[daily_sales.size()][5];
        DailySale daily_sale;
        for (int i = 0;i<daily_sales.size();i++){
            daily_sale = daily_sales.get(i);
            matrix[i][0] = daily_sale.daily_sales_id;
            matrix[i][1] = Integer.toString(daily_sale.quantity);
            matrix[i][2] = Search.getItemNamebyGroupID(daily_sale.group_id);
            matrix[i][3] = Double.toString(daily_sale.retail_price);
            matrix[i][4] = daily_sale.date;
        }
        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            matrix,
            new String [] {
                "Daily Sales ID", "Quantity", "Item Name", "Retail Price", "Date"}
        ){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        }
    );
    jTable1.setRowHeight(25);
    jScrollPane1.setViewportView(jTable1);

    jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel1.setText("Search:");

    jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
    jTextField1.setText("");

    jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
    jButton1.setText("Search");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
    jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel2.setText("Daily Sales");

    jButton2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
    jButton2.setText("Add");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    jButton3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
    jButton3.setText("Delete");
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
        }
    });

    jButton4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
    jButton4.setText("Edit");
    jButton4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton4ActionPerformed(evt);
        }
    });

    jButton5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
    jButton5.setText("<");
    jButton5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton5ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addGroup(layout.createSequentialGroup()
                    .addGap(52, 52, 52)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1397, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(202, 202, 202)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(51, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(20, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String keyword = jTextField1.getText().toLowerCase();
        if (keyword.isEmpty()) {
            UpdateTable.forDailySale(jTable1);
        }else{
            ObjectList objectList = new ObjectList();
            List<DailySale> daily_sales = objectList.getDailySales();
            String[][] matrix = new String[daily_sales.size()][5];
            DailySale daily_sale;
            for (int i = 0; i < daily_sales.size(); i++) {
                daily_sale = daily_sales.get(i);
                if (daily_sale.anyMatch(keyword)) {
                    daily_sale = daily_sales.get(i);
                    matrix[i][0] = daily_sale.daily_sales_id;
                    matrix[i][1] = Integer.toString(daily_sale.quantity);
                    matrix[i][2] = Search.getItemNamebyGroupID(daily_sale.group_id);
                    matrix[i][3] = Double.toString(daily_sale.retail_price);
                    matrix[i][4] = daily_sale.date;
                }
            }
            matrix = Matrix.removeEmptyRows(matrix);
            jTable1.setModel(new DefaultTableModel(
                                     matrix,
                                     new String [] {
                                             "Daily Sales ID", "Quantity", "Item Name", "Retail Price", "Date"
                                     }
                             ){
                                 @Override
                                 public boolean isCellEditable(int row, int column) {
                                     return false; // This makes all cells non-editable
                                 }
                             }
            );
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String password = JOptionPane.showInputDialog("Please insert your user password");
        if (password == null || !password.equals(SessionManager.getInstance().password)){
            JOptionPane.showMessageDialog(null, "Wrong password, action denied", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        //Daily Sales ID
        String daily_sales_id = Query.getLatestDailySalesID();

        //Group ID
        String group_id;
        String item_name;
        while (true){
            item_name = JOptionPane.showInputDialog("Insert Item Name");
            if (item_name==null){
                return;
            }else if(!ValidateFormat.itemName(item_name)){
                group_id = Search.getGroupIDbyItemName(item_name);
                break;
            }else {
                JOptionPane.showMessageDialog(null, "The item name doesn't exist", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }

        //Quantity
        String quantity;
        while (true){
            quantity = JOptionPane.showInputDialog("Insert Quantity");
            if (quantity==null){
                return;
            }else if(ValidateFormat.quantityUnit(quantity)){
                break;
            }else {
                JOptionPane.showMessageDialog(null, "Invalid format for quantity, please try again", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }

        //Retail Price
        String retail_price = Search.getRetailPrice(group_id);

        //Date
        String date = Query.getCurrentDate();

        int result = JOptionPane.showConfirmDialog(null, "Confirm to add a new sales entry of item: "+item_name+ "?", "Confirmation",JOptionPane.YES_NO_OPTION);
        if(result == JOptionPane.YES_OPTION){
            String line = daily_sales_id + "|" + quantity + "|" + group_id + "|" + retail_price + "|" + date;
            TextFile.addLine("src/main/java/com/mycompany/JavaY2/TextFile/daily_sales_items", line);
            int stock = Integer.parseInt(TextFile.getColumn("src/main/java/com/mycompany/JavaY2/TextFile/inventory",0,group_id,2));
            String new_stock = Integer.toString(stock - Integer.parseInt(quantity));
            Edit.inventory(group_id, 2, new_stock);
            JOptionPane.showMessageDialog(null, "Successfully added a new daily sales", "Success", JOptionPane.INFORMATION_MESSAGE);
            UpdateTable.forDailySale(jTable1);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String password = JOptionPane.showInputDialog("Please insert your user password");
        if (password == null || !password.equals(SessionManager.getInstance().password)){
            JOptionPane.showMessageDialog(null, "Wrong password, action denied", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int selected_row = jTable1.getSelectedRow();
        if(selected_row == -1){
            return;
        }
        String daily_sales_id = jTable1.getValueAt(selected_row, 0).toString();
        int result = JOptionPane.showConfirmDialog(null, "Confirm to delete daily sales of: "+daily_sales_id+ "?", "Confirmation",JOptionPane.YES_NO_OPTION);
        if(result == JOptionPane.YES_OPTION){
            String group_id = Search.getGroupIDbyItemName(jTable1.getValueAt(selected_row,2).toString());
            int quantity = Integer.parseInt(TextFile.getColumn("src/main/java/com/mycompany/JavaY2/TextFile/daily_sales_items", 0, daily_sales_id, 1));
            int stock = Integer.parseInt(TextFile.getColumn("src/main/java/com/mycompany/JavaY2/TextFile/inventory", 0, group_id, 2));
            String new_stock = Integer.toString(stock + quantity);
            TextFile.deleteLine("src/main/java/com/mycompany/JavaY2/TextFile/daily_sales_items", daily_sales_id,0);
            Edit.inventory(group_id, 2, new_stock);
            JOptionPane.showMessageDialog(null, "Successfully delete a new daily sales", "Success", JOptionPane.INFORMATION_MESSAGE);
            UpdateTable.forDailySale(jTable1);
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String password = JOptionPane.showInputDialog("Please insert your user password");
        if (password == null || !password.equals(SessionManager.getInstance().password)){
            JOptionPane.showMessageDialog(null, "Wrong password, action denied", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int selected_row = jTable1.getSelectedRow();
        if (selected_row == -1){
            JOptionPane.showMessageDialog(null, "Please select a row to modify", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String daily_sales_id = jTable1.getValueAt(selected_row,0).toString();
        String group_id = Search.getGroupIDbyItemName(jTable1.getValueAt(selected_row,2).toString());
        String[] options = {"Item Name", "Quantity", "Retail Price", "Date"};
        String choice = (String) JOptionPane.showInputDialog(
                null,
                "Select an option:",
                "Dropdown Selection",
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[0]);
        if (choice == null){
            return;
        }
        switch(choice){
            case "Item Name":
                String item_name;
                while (true){
                    item_name = JOptionPane.showInputDialog("Insert Item Name");
                    if (item_name==null){
                        return;
                    }else if(!ValidateFormat.itemName(item_name)){
                        group_id = Search.getGroupIDbyItemName(item_name);
                        break;
                    }else {
                        JOptionPane.showMessageDialog(null, "The item name doesn't exist", "Warning", JOptionPane.WARNING_MESSAGE);
                    }
                }
                int result = JOptionPane.showConfirmDialog(null, "Confirm to update item name to: "+item_name+ "?", "Confirmation",JOptionPane.YES_NO_OPTION);
                if(result == JOptionPane.YES_OPTION){
                    String old_item_name = jTable1.getValueAt(selected_row, 2).toString();
                    int quantity = Integer.parseInt(jTable1.getValueAt(selected_row,1).toString());
                    Edit.dailySalesItems(daily_sales_id, 2, group_id);
                    //Update new item inventory
                    int stock = Integer.parseInt(TextFile.getColumn("src/main/java/com/mycompany/JavaY2/TextFile/inventory", 0, group_id, 2)) - quantity;
                    Edit.inventory(group_id,2, Integer.toString(stock));
                    //Update old item inventory
                    stock = Integer.parseInt(TextFile.getColumn("src/main/java/com/mycompany/JavaY2/TextFile/inventory", 0, Search.getGroupIDbyItemName(old_item_name), 2)) + quantity;
                    Edit.inventory(Search.getGroupIDbyItemName(old_item_name),2, Integer.toString(stock));

                    JOptionPane.showMessageDialog(null, "The item name updated successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                    UpdateTable.forDailySale(jTable1);
                }
                break;

            case "Quantity":
                String quantity;
                while (true){
                    quantity = JOptionPane.showInputDialog("Insert Quantity");
                    if (quantity==null){
                        return;
                    }else if(ValidateFormat.quantityUnit(quantity)){
                        break;
                    }else {
                        JOptionPane.showMessageDialog(null, "Invalid format for quantity, please try again", "Warning", JOptionPane.WARNING_MESSAGE);
                    }
                }
                int result2 = JOptionPane.showConfirmDialog(null, "Confirm to update item quantity to: "+quantity+ "?", "Confirmation",JOptionPane.YES_NO_OPTION);
                if(result2 == JOptionPane.YES_OPTION){
                    int old_quantity = Integer.parseInt(jTable1.getValueAt(selected_row,1).toString());
                    int stock = Integer.parseInt(TextFile.getColumn("src/main/java/com/mycompany/JavaY2/TextFile/inventory", 0, group_id, 2)) + old_quantity;
                    Edit.inventory(group_id,2, Integer.toString(stock));

                    stock = Integer.parseInt(TextFile.getColumn("src/main/java/com/mycompany/JavaY2/TextFile/inventory", 0, group_id, 2)) - Integer.parseInt(quantity);
                    Edit.inventory(group_id,2, Integer.toString(stock));

                    Edit.dailySalesItems(daily_sales_id, 1, quantity);

                    JOptionPane.showMessageDialog(null, "The item quantity updated successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                    UpdateTable.forDailySale(jTable1);
                    Edit.updateSalesTxt();
                }
                break;

            case "Retail Price":
                String retail_price;
                while (true){
                    retail_price = JOptionPane.showInputDialog("Insert Retail Price");
                    if (retail_price==null){
                        return;
                    }else if(ValidateFormat.unitPrice(retail_price)){
                        break;
                    }else {
                        JOptionPane.showMessageDialog(null, "Invalid format for retail price, please try again", "Warning", JOptionPane.WARNING_MESSAGE);
                    }
                }
                int result3 = JOptionPane.showConfirmDialog(null, "Confirm to update item retail price to: "+retail_price+ "?", "Confirmation",JOptionPane.YES_NO_OPTION);
                if(result3 == JOptionPane.YES_OPTION){
                    retail_price = Double.toString(Math.round(Double.parseDouble(retail_price)* 10.0) / 10.0);
                    Edit.dailySalesItems(daily_sales_id, 3, retail_price);
                    JOptionPane.showMessageDialog(null, "The item retail price updated successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                    UpdateTable.forDailySale(jTable1);
                    Edit.updateSalesTxt();
                }
                break;

            case "Date":
                String date;
                while (true){
                    date = JOptionPane.showInputDialog("Insert Date");
                    if (date==null){
                        return;
                    }else if(ValidateFormat.date(date)){
                        break;
                    }else {
                        JOptionPane.showMessageDialog(null, "Invalid format for date, please try again (eg:01052025)", "Warning", JOptionPane.WARNING_MESSAGE);
                    }
                }
                int result4 = JOptionPane.showConfirmDialog(null, "Confirm to update date to: "+date+ "?", "Confirmation",JOptionPane.YES_NO_OPTION);
                if(result4 == JOptionPane.YES_OPTION){
                    Edit.dailySalesItems(daily_sales_id,4, date);
                    JOptionPane.showMessageDialog(null, "The date updated successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                    UpdateTable.forDailySale(jTable1);
                    Edit.updateSalesTxt();
                }
                break;


            default:
                return;
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        admin_mainpage page = new admin_mainpage();
        page.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin_sales_entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin_sales_entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin_sales_entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin_sales_entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admin_sales_entry().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
