/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.JavaY2.FinanceManagerGUI;

import com.mycompany.JavaY2.Class.Edit;
import com.mycompany.JavaY2.Object.SessionManager;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.List;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Ooi Yi Yang
 */
public class fm_payment extends javax.swing.JFrame {
    private DefaultTableModel model = new DefaultTableModel();
    private String column_name[] = {"Order ID", "Item ID", "Item Name", "Quantity", "Total Amount", "Date Received", "Delivery Status", "Payment Date", "Payment Status"}; 
    
    /**
     * Creates new form fm_payment
     */
    public fm_payment() {
        initComponents();
        model.setColumnIdentifiers(column_name);
        
        try (BufferedReader reader = new BufferedReader(new FileReader("src/main/java/com/mycompany/JavaY2/TextFile/receives"))) {
            String line;
            reader.readLine(); //skip the header line
            while ((line = reader.readLine()) != null) {
                String[] order_received_details = line.split("\\|");
                if(order_received_details[6].equals("Received") && order_received_details[7].equals("-")){
                    order_received_details[8] = "Unpaid";
                }else if(order_received_details[6].equals("Not Received") || order_received_details[6].equals("Cancelled")){
                    order_received_details[7] = " - ";
                    order_received_details[8] = " - ";
                }
                model.addRow(order_received_details);
            }
            reader.close();
        }catch (IOException e) {
            JOptionPane.showMessageDialog(null,"Inventory is currently unavailable"); // Handle file reading exception
        }
        
        int row_total = order_receivedTable.getRowCount();
        double total_unpaid_amount = 0.0;
        for(int i = 0; i< row_total;i++){
            if (order_receivedTable.getValueAt(i, 6).toString().equals("Received") && order_receivedTable.getValueAt(i, 8).toString().equals("Unpaid")){
                total_unpaid_amount = total_unpaid_amount + Double.parseDouble(order_receivedTable.getValueAt(i,4).toString());
            }
        }
        unpaid_amountField.setText(Double.toString(total_unpaid_amount));
        
        DefaultListCellRenderer listRenderer = new DefaultListCellRenderer();
        listRenderer.setHorizontalAlignment(DefaultListCellRenderer.CENTER);
        order_paymentFilter.setRenderer(listRenderer);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_order_list = new javax.swing.JButton();
        btn_req_list = new javax.swing.JButton();
        btn_inventory_list = new javax.swing.JButton();
        btnPayment = new javax.swing.JButton();
        btnReport = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnProfile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        order_receivedTable = new javax.swing.JTable();
        order_paymentFilter = new javax.swing.JComboBox<>();
        btnPay = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        unpaid_amountField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        searchPaymentField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btn_order_list.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btn_order_list.setText("<html><p style='text-align:center;'>Purchase Order List</p></html>");
        btn_order_list.setPreferredSize(new java.awt.Dimension(200, 105));
        btn_order_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_order_listActionPerformed(evt);
            }
        });

        btn_req_list.setFont(new java.awt.Font("Segoe UI", 0, 22)); // NOI18N
        btn_req_list.setText("<html><p style='text-align:center;'>Purchase Requisition List</p></html>");
        btn_req_list.setPreferredSize(new java.awt.Dimension(200, 105));
        btn_req_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_req_listActionPerformed(evt);
            }
        });

        btn_inventory_list.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btn_inventory_list.setText("Inventory List");
        btn_inventory_list.setPreferredSize(new java.awt.Dimension(200, 105));
        btn_inventory_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inventory_listActionPerformed(evt);
            }
        });

        btnPayment.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnPayment.setText("Payments");
        btnPayment.setPreferredSize(new java.awt.Dimension(200, 105));
        btnPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaymentActionPerformed(evt);
            }
        });

        btnReport.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnReport.setText("<html><p style='text-align:center;'>Financial Report</p></html>");
        btnReport.setPreferredSize(new java.awt.Dimension(200, 105));
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        btnBack.setText("<");
        btnBack.setPreferredSize(new java.awt.Dimension(100, 74));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 48)); // NOI18N
        jLabel1.setText("Payment");

        btnProfile.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        btnProfile.setText("Profile");
        btnProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfileActionPerformed(evt);
            }
        });

        order_receivedTable.setModel(model);
        jScrollPane1.setViewportView(order_receivedTable);

        order_paymentFilter.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        order_paymentFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Paid", "Unpaid" }));
        order_paymentFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                order_paymentFilterActionPerformed(evt);
            }
        });

        btnPay.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        btnPay.setText("Pay");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel3.setText("Total Unpaid Amount:");

        unpaid_amountField.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N

        jLabel15.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel15.setText("Search:");

        searchPaymentField.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        searchPaymentField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchPaymentFieldKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(548, 548, 548)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_order_list, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_req_list, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_inventory_list, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPayment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnProfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(unpaid_amountField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchPaymentField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(order_paymentFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1282, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(order_paymentFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(10, 10, 10))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(searchPaymentField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(unpaid_amountField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_order_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(btn_req_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(btn_inventory_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(btnPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_order_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_order_listActionPerformed
        new fm_purchase_order().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_order_listActionPerformed

    private void btn_req_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_req_listActionPerformed
        new fm_purchase_requisitions().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_req_listActionPerformed

    private void btn_inventory_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inventory_listActionPerformed
        new fm_inventory().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_inventory_listActionPerformed

    private void btnPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaymentActionPerformed
        this.setVisible(true);
    }//GEN-LAST:event_btnPaymentActionPerformed

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        new fm_finance_report().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnReportActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose();
        new fm_mainpage().setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfileActionPerformed
        new fm_profile().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnProfileActionPerformed

    private void order_paymentFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_order_paymentFilterActionPerformed
        TableRowSorter<DefaultTableModel> paymentStatus = new TableRowSorter<>(model);
        order_receivedTable.setRowSorter(paymentStatus);
        String selected_payment_status = order_paymentFilter.getSelectedItem().toString();
        switch(selected_payment_status){
            case "Paid" -> paymentStatus.setRowFilter(RowFilter.regexFilter("(?i)^" + selected_payment_status + "$", 8));
            case "Unpaid" -> paymentStatus.setRowFilter(RowFilter.regexFilter("(?i)^" + selected_payment_status + "$", 8));
            case "All" -> paymentStatus.setRowFilter(null);
            default -> {}
        }
    }//GEN-LAST:event_order_paymentFilterActionPerformed

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        String password = JOptionPane.showInputDialog("Please enter your credential before make payment for the Purchase Order");
        if (password == null || !password.equals(SessionManager.getInstance().password)){
            JOptionPane.showMessageDialog(this, 
                    "Wrong password entered, you are not allowed to PAY for the Purchase Order", 
                    "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
       
        int row_selected = order_receivedTable.getSelectedRow();
        if (row_selected == -1) {
            JOptionPane.showMessageDialog(this,
                    "Please select a purchase order to proceed with the payment process.",
                    "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String orderID = order_receivedTable.getValueAt(row_selected, 0).toString();
        String date_received = order_receivedTable.getValueAt(row_selected, 5).toString();
        String delivery_status = String.valueOf(order_receivedTable.getValueAt(row_selected, 6));
        String payment_status = String.valueOf(order_receivedTable.getValueAt(row_selected, 8));
        
        if(payment_status.equals("Paid")){
            JOptionPane.showMessageDialog(this,
                "This purchase order has already paid by other Finance Manager.",
                "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        LocalDate current_date = LocalDate.now();
        DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern("ddMMyyyy");
        String payment_date = current_date.format(dateFormat);

        if (delivery_status.equals("Received")) {
            if (!current_date.isBefore(LocalDate.parse(date_received, dateFormat))) {
                order_receivedTable.setValueAt(payment_date, row_selected, 7);
                order_receivedTable.setValueAt("Paid", row_selected, 8);
                Edit.editingColumn("receive", orderID, 7, payment_date);
                Edit.editingColumn("receive", orderID, 8, "Paid");
                JOptionPane.showMessageDialog(this, "Your transaction is done sucessfully", "Successful", JOptionPane.INFORMATION_MESSAGE);

                double paid_amount = Double.parseDouble(order_receivedTable.getValueAt(row_selected, 4).toString());
                double current_total_unpaid_amount = Double.parseDouble(unpaid_amountField.getText());
                double new_total_unpaid_amount = current_total_unpaid_amount - paid_amount;

                unpaid_amountField.setText(Double.toString(new_total_unpaid_amount));
            } else {
                JOptionPane.showMessageDialog(this, "Payment cannot be made before the received date of the item ", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please ensure that the item in the Purchase Order is RECEIVED", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnPayActionPerformed

    private void searchPaymentFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchPaymentFieldKeyReleased
        TableRowSorter<DefaultTableModel> search = new TableRowSorter<>(model);
        order_receivedTable.setRowSorter(search);
        search.setRowFilter(RowFilter.regexFilter(searchPaymentField.getText()));
    }//GEN-LAST:event_searchPaymentFieldKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fm_payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fm_payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fm_payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fm_payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fm_payment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnPayment;
    private javax.swing.JButton btnProfile;
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btn_inventory_list;
    private javax.swing.JButton btn_order_list;
    private javax.swing.JButton btn_req_list;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> order_paymentFilter;
    private javax.swing.JTable order_receivedTable;
    private javax.swing.JTextField searchPaymentField;
    private javax.swing.JTextField unpaid_amountField;
    // End of variables declaration//GEN-END:variables
}
