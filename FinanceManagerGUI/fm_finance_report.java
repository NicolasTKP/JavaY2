/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.JavaY2.FinanceManagerGUI;

import com.mycompany.JavaY2.Object.Inventory_Value;
import com.mycompany.JavaY2.Object.ObjectList;
import com.mycompany.JavaY2.Object.SessionManager;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.Objects;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Ooi Yi Yang
 */
public class fm_finance_report extends javax.swing.JFrame {
    private DefaultTableModel model = new DefaultTableModel();
    private String column_name[] = {"Group ID", "Item Name", "Quantity", "Average Unit Price", "Actual Value"};
    private static final String sales_file = "src/main/java/com/mycompany/JavaY2/TextFile/sales";
    private static final String receives_file = "src/main/java/com/mycompany/JavaY2/TextFile/receives";
    private static final DateTimeFormatter date_format = DateTimeFormatter.ofPattern("ddMMyyyy");
    ObjectList objectList = new ObjectList();
    /**
     * Creates new form fm_finance_report
     */
    public fm_finance_report() {
        initComponents();
        model.setColumnIdentifiers(column_name);
        
        List<Inventory_Value> inventoryValues = objectList.getInventoryValue(); 

        // Populate the table
        for (Inventory_Value item : inventoryValues) {
            Object[] row = {
                item.group_id,
                item.item_name,
                item.quantity,
                item.average_unit_price,
                item.actual_value
            };
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        btn_order_list = new javax.swing.JButton();
        btn_req_list = new javax.swing.JButton();
        btn_inventory_list = new javax.swing.JButton();
        btnPayment = new javax.swing.JButton();
        btnReport = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnProfile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        inventory_amount_table = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        yearly_salesField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        yearly_purchaseField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        daily_salesField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        monthly_purchaseField = new javax.swing.JTextField();
        monthly_salesField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        daily_purchaseField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        yearly_revenueField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        monthly_revenueField = new javax.swing.JTextField();
        daily_revenueField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        yearly_profitField = new javax.swing.JTextField();
        monthly_profitField = new javax.swing.JTextField();
        daily_profitField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        searchPOField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        total_inventoryField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnBack.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        btnBack.setText("<");
        btnBack.setPreferredSize(new java.awt.Dimension(100, 74));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btn_order_list.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btn_order_list.setText("<html><p style='text-align:center;'>Purchase Order List</p></html>");
        btn_order_list.setPreferredSize(new java.awt.Dimension(200, 100));
        btn_order_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_order_listActionPerformed(evt);
            }
        });

        btn_req_list.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btn_req_list.setText("<html><p style='text-align:center;'>Purchase Requisition List</p></html>");
        btn_req_list.setActionCommand("");
        btn_req_list.setPreferredSize(new java.awt.Dimension(200, 100));
        btn_req_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_req_listActionPerformed(evt);
            }
        });

        btn_inventory_list.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btn_inventory_list.setText("Inventory List");
        btn_inventory_list.setPreferredSize(new java.awt.Dimension(200, 100));
        btn_inventory_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inventory_listActionPerformed(evt);
            }
        });

        btnPayment.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnPayment.setText("Payments");
        btnPayment.setPreferredSize(new java.awt.Dimension(200, 100));
        btnPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaymentActionPerformed(evt);
            }
        });

        btnReport.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnReport.setText("<html><p style='text-align:center;'>Financial <br> Report</p></html>");
        btnReport.setPreferredSize(new java.awt.Dimension(200, 100));
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 48)); // NOI18N
        jLabel1.setText("Financial Report");

        btnProfile.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        btnProfile.setText("Profile");
        btnProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfileActionPerformed(evt);
            }
        });

        inventory_amount_table.setModel(model);
        jScrollPane1.setViewportView(inventory_amount_table);

        jLabel3.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel3.setText("Total Sales of This Year:");

        yearly_salesField.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        double total_yearly_sales = 0.0;

        try(BufferedReader reader = new BufferedReader(new FileReader(sales_file))) {
            String lines;
            reader.readLine();
            while ((lines = reader.readLine()) != null) {
                String[] sales_data = lines.split("\\|");
                LocalDate sales_date = LocalDate.parse(sales_data[1], date_format);
                int current_year = LocalDate.now().getYear();
                if (sales_date.getYear() == current_year) {
                    total_yearly_sales = total_yearly_sales + Double.parseDouble(sales_data[2]);
                }
            }
            yearly_salesField.setFocusable(false);
            yearly_salesField.setText(Double.toString(total_yearly_sales));
        }catch (IOException e){
            e.printStackTrace();
        }

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel4.setText("Total Sales of This Month:");

        double total_yearly_purchase = 0.0;

        try(BufferedReader reader = new BufferedReader(new FileReader(receives_file))) {
            String lines;
            reader.readLine();
            while ((lines = reader.readLine()) != null) {
                String[] receives_data = lines.split("\\|");
                String received_status = receives_data[6].strip();
                if(!Objects.equals(receives_data[7], "-")){
                    LocalDate payment_date = LocalDate.parse(receives_data[7], date_format);
                    int current_year = LocalDate.now().getYear();
                    if (received_status.equals("Received") && payment_date.getYear() == current_year) {
                        total_yearly_purchase = total_yearly_purchase + Double.parseDouble(receives_data[4]);
                    }
                }
            }
            yearly_purchaseField.setText(Double.toString(total_yearly_purchase));
        }catch (IOException e){
            e.printStackTrace();
        }
        yearly_purchaseField.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N

        jLabel5.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel5.setText("Total Daily Sales:");

        daily_salesField.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        double total_daily_sales = 0.0;

        try(BufferedReader reader = new BufferedReader(new FileReader(sales_file))) {
            String lines;
            reader.readLine();
            while ((lines = reader.readLine()) != null) {
                String[] sales_data = lines.split("\\|");
                LocalDate sales_date = LocalDate.parse(sales_data[1], date_format);
                if (sales_date.equals(LocalDate.now())) {
                    total_daily_sales = total_daily_sales + Double.parseDouble(sales_data[2]);
                }
            }
            daily_salesField.setFocusable(false);
            daily_salesField.setText(Double.toString(total_daily_sales));
        }catch (IOException e){
            e.printStackTrace();
        }

        jLabel6.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel6.setText("Total Purchase of This Year:");

        jLabel7.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel7.setText("Total Purchase of This Month:");

        double total_monthly_purchase = 0.0;

        try (BufferedReader reader = new BufferedReader(new FileReader(receives_file))) {
            String lines;
            reader.readLine();
            while ((lines = reader.readLine()) != null) {
                String[] receives_data = lines.split("\\|");
                String received_status = receives_data[6].strip();
                if(!Objects.equals(receives_data[7], "-")){
                    LocalDate payment_date = LocalDate.parse(receives_data[7], date_format);
                    int current_year = LocalDate.now().getYear();
                    if (received_status.equals("Received")) {
                        if (payment_date.getYear() == current_year && payment_date.getMonth() == LocalDate.now().getMonth()) {
                            total_monthly_purchase = total_monthly_purchase + Double.parseDouble(receives_data[4]);
                        }
                    }
                }
            }
            monthly_purchaseField.setFocusable(false);
            monthly_purchaseField.setText(Double.toString(total_monthly_purchase));
        } catch (IOException e) {
            e.printStackTrace();
        }
        monthly_purchaseField.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N

        monthly_salesField.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        double total_monthly_sales = 0.0;

        try(BufferedReader reader = new BufferedReader(new FileReader(sales_file))) {
            String lines;
            reader.readLine();
            while ((lines = reader.readLine()) != null) {
                String[] sales_data = lines.split("\\|");
                LocalDate sales_date = LocalDate.parse(sales_data[1], date_format);
                if (sales_date.getYear() == LocalDate.now().getYear() && sales_date.getMonth() == LocalDate.now().getMonth()) {
                    total_monthly_sales = total_monthly_sales + Double.parseDouble(sales_data[2]);
                }
            }
            monthly_salesField.setFocusable(false);
            monthly_salesField.setText(Double.toString(total_monthly_sales));
        }catch (IOException e){
            e.printStackTrace();
        }

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel8.setText("Total Daily Purchase:");

        double total_daily_purchase = 0.0;

        try(BufferedReader reader = new BufferedReader(new FileReader(receives_file))) {
            String lines;
            reader.readLine();
            while ((lines = reader.readLine()) != null) {
                String[] receives_data = lines.split("\\|");
                String received_status = receives_data[6].strip();
                if(!Objects.equals(receives_data[7], "-")){
                    LocalDate payment_date = LocalDate.parse(receives_data[7], date_format);
                    if (received_status.equals("Received") && payment_date.equals(LocalDate.now())){
                        total_daily_purchase = total_daily_purchase + Double.parseDouble(receives_data[4]);
                    }
                }
            }
            daily_purchaseField.setFocusable(false);
            daily_purchaseField.setText(Double.toString(total_daily_purchase));
        }catch (IOException e){
            e.printStackTrace();
        }
        daily_purchaseField.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N

        jLabel9.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel9.setText("Yearly Revenue:");

        yearly_revenueField.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        yearly_revenueField.setFocusable(false);
        yearly_revenueField.setText(Double.toString(Double.parseDouble(yearly_salesField.getText()) - Double.parseDouble(yearly_purchaseField.getText())));

        jLabel10.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel10.setText("Monthly Revenue:");

        jLabel11.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel11.setText("Daily Revenue:");

        monthly_revenueField.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        monthly_revenueField.setFocusable(false);
        monthly_revenueField.setText(Double.toString(Double.parseDouble(monthly_salesField.getText()) - Double.parseDouble(monthly_purchaseField.getText())));

        daily_revenueField.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        daily_revenueField.setFocusable(false);
        daily_revenueField.setText(Double.toString(Double.parseDouble(daily_salesField.getText()) - Double.parseDouble(daily_purchaseField.getText())));

        jLabel12.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel12.setText("Yearly Profit/Loss (%):");

        jLabel13.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel13.setText("Monthly Profit/Loss (%):");

        jLabel14.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel14.setText("Daily Profit/Loss (%):");

        yearly_profitField.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        yearly_profitField.setFocusable(false);
        yearly_profitField.setText(String.format("%.1f%%", (Double.parseDouble(yearly_revenueField.getText()) / Double.parseDouble(yearly_purchaseField.getText())) * 100));

        monthly_profitField.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        monthly_profitField.setFocusable(false);
        monthly_profitField.setText(String.format("%.1f%%", (Double.parseDouble(monthly_revenueField.getText()) / Double.parseDouble(monthly_purchaseField.getText())) * 100));

        daily_profitField.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        daily_profitField.setFocusable(false);
        daily_profitField.setText(String.format("%.1f%%", (Double.parseDouble(daily_revenueField.getText()) / Double.parseDouble(daily_purchaseField.getText())) * 100));

        jLabel15.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel15.setText("Search:");

        searchPOField.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        searchPOField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchPOFieldKeyReleased(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel16.setText("Total Amount of Inventory Value:");

        total_inventoryField.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        int total_row = inventory_amount_table.getRowCount();
        double total = 0.0;
        for(int i = 0; i< total_row; i++){
            total = total + Double.parseDouble(inventory_amount_table.getValueAt(i,4).toString());
        }
        total_inventoryField.setText(Double.toString(total));
        total_inventoryField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                total_inventoryFieldActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel17.setText("Inventory Value Table");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_order_list, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_req_list, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_inventory_list, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPayment, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnReport, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnProfile, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(total_inventoryField, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(116, 116, 116)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchPOField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(monthly_revenueField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(yearly_revenueField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(daily_revenueField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(monthly_salesField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(yearly_salesField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(daily_salesField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 237, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel7)
                                                .addComponent(jLabel12)
                                                .addComponent(jLabel13)
                                                .addComponent(jLabel14))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(monthly_purchaseField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(yearly_profitField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(monthly_profitField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(daily_profitField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(17, 17, 17)
                                            .addComponent(jLabel6)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(yearly_purchaseField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(daily_purchaseField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(511, 511, 511)))
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_order_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btn_req_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btn_inventory_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btnPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btnProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(yearly_salesField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(yearly_purchaseField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(monthly_salesField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(monthly_purchaseField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(jLabel5)
                                .addComponent(daily_salesField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(daily_purchaseField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(yearly_revenueField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(yearly_profitField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(monthly_revenueField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(monthly_profitField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(daily_revenueField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(daily_profitField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(total_inventoryField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchPOField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(88, 88, 88))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose();
        new fm_mainpage().setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfileActionPerformed
        new fm_profile().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnProfileActionPerformed

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        this.setVisible(true);
    }//GEN-LAST:event_btnReportActionPerformed

    private void btnPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaymentActionPerformed
        new fm_payment().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnPaymentActionPerformed

    private void btn_inventory_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inventory_listActionPerformed
        new fm_inventory().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_inventory_listActionPerformed

    private void btn_req_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_req_listActionPerformed
        new fm_purchase_requisitions().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_req_listActionPerformed

    private void btn_order_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_order_listActionPerformed
        new fm_purchase_order().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_order_listActionPerformed

    private void searchPOFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchPOFieldKeyReleased
        TableRowSorter<DefaultTableModel> search = new TableRowSorter<>(model);
        inventory_amount_table.setRowSorter(search);
        search.setRowFilter(RowFilter.regexFilter(searchPOField.getText()));
    }//GEN-LAST:event_searchPOFieldKeyReleased

    private void total_inventoryFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_total_inventoryFieldActionPerformed

    }//GEN-LAST:event_total_inventoryFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fm_finance_report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fm_finance_report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fm_finance_report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fm_finance_report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fm_finance_report().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPayment;
    private javax.swing.JButton btnProfile;
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btn_inventory_list;
    private javax.swing.JButton btn_order_list;
    private javax.swing.JButton btn_req_list;
    private javax.swing.JTextField daily_profitField;
    private javax.swing.JTextField daily_purchaseField;
    private javax.swing.JTextField daily_revenueField;
    private javax.swing.JTextField daily_salesField;
    private javax.swing.JTable inventory_amount_table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField monthly_profitField;
    private javax.swing.JTextField monthly_purchaseField;
    private javax.swing.JTextField monthly_revenueField;
    private javax.swing.JTextField monthly_salesField;
    private javax.swing.JTextField searchPOField;
    private javax.swing.JTextField total_inventoryField;
    private javax.swing.JTextField yearly_profitField;
    private javax.swing.JTextField yearly_purchaseField;
    private javax.swing.JTextField yearly_revenueField;
    private javax.swing.JTextField yearly_salesField;
    // End of variables declaration//GEN-END:variables
}
