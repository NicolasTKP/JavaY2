/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.JavaY2.FinanceManagerGUI;

import com.mycompany.JavaY2.Class.Edit;
import com.mycompany.JavaY2.Class.Search;
import com.mycompany.JavaY2.Class.TextFile;
import com.mycompany.JavaY2.Object.PurchaseOrder;
import com.mycompany.JavaY2.Object.SessionManager;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Ooi Yi Yang
 */

public class fm_purchase_order extends javax.swing.JFrame {
    private DefaultTableModel model = new DefaultTableModel();
    private String colName[] = {"Order ID", "Requisition ID", "Item ID", "User ID", "Username", "Quantity", "Unit Price", "Amount", "Supplier ID", "Order Date", "Order Status"}; 
    private DefaultListCellRenderer listRenderer;
    
    public fm_purchase_order() {
        initComponents();
        model.setColumnIdentifiers(colName);

        try (BufferedReader reader = new BufferedReader(new FileReader("src/main/java/com/mycompany/JavaY2/TextFile/purchase_orders"))) {
            String line;
            reader.readLine();
            while ((line = reader.readLine()) != null) {
                String[] orderDetails = line.split("\\|");
                String username_by_id = Search.getUsername(orderDetails[3]);
                
                String[] full_orderDetails = new String[orderDetails.length + 1];
                System.arraycopy(orderDetails, 0, full_orderDetails, 0, 4);
                full_orderDetails[4] = username_by_id;
                System.arraycopy(orderDetails, 4, full_orderDetails, 5, orderDetails.length - 4);
                
                model.addRow(full_orderDetails);
            }
            reader.close();
        }catch (IOException e) {
            JOptionPane.showMessageDialog(null,"Purchase Order is currently unavailable"); 
        }
        
        listRenderer = new DefaultListCellRenderer();
        listRenderer.setHorizontalAlignment(DefaultListCellRenderer.CENTER);
        orderFilter.setRenderer(listRenderer);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        btn_order_list = new javax.swing.JButton();
        btn_req_list = new javax.swing.JButton();
        btn_inventory_list = new javax.swing.JButton();
        btnPayment = new javax.swing.JButton();
        btnReport = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnProfile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        approveBtn = new javax.swing.JButton();
        rejectBtn = new javax.swing.JButton();
        orderFilter = new javax.swing.JComboBox<>();
        btnEditPO = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        searchPOField = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnBack.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        btnBack.setText("<");
        btnBack.setPreferredSize(new java.awt.Dimension(100, 74));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btn_order_list.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btn_order_list.setText("<html><p style='text-align:center;'>Purchase Order List</p></html>");
        btn_order_list.setPreferredSize(new java.awt.Dimension(200, 105));
        btn_order_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_order_listActionPerformed(evt);
            }
        });

        btn_req_list.setFont(new java.awt.Font("Segoe UI", 0, 22)); // NOI18N
        btn_req_list.setText("<html><p style='text-align:center;'>Purchase Requisition List</p></html>");
        btn_req_list.setPreferredSize(new java.awt.Dimension(200, 105));
        btn_req_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_req_listActionPerformed(evt);
            }
        });

        btn_inventory_list.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btn_inventory_list.setText("Inventory List");
        btn_inventory_list.setPreferredSize(new java.awt.Dimension(200, 105));
        btn_inventory_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inventory_listActionPerformed(evt);
            }
        });

        btnPayment.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnPayment.setText("Payments");
        btnPayment.setPreferredSize(new java.awt.Dimension(200, 105));
        btnPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaymentActionPerformed(evt);
            }
        });

        btnReport.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnReport.setText("<html><p style='text-align:center;'>Financial Report</p></html>");
        btnReport.setPreferredSize(new java.awt.Dimension(200, 105));
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 48)); // NOI18N
        jLabel1.setText("Purchase Order List");

        btnProfile.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        btnProfile.setText("Profile");
        btnProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfileActionPerformed(evt);
            }
        });

        orderTable.setModel(model);
        orderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                orderTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(orderTable);

        approveBtn.setFont(new java.awt.Font("sansserif", 0, 20)); // NOI18N
        approveBtn.setText("Approve");
        approveBtn.setPreferredSize(new java.awt.Dimension(250, 50));
        approveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveBtnActionPerformed(evt);
            }
        });

        rejectBtn.setFont(new java.awt.Font("sansserif", 0, 20)); // NOI18N
        rejectBtn.setText("Reject");
        rejectBtn.setPreferredSize(new java.awt.Dimension(250, 50));
        rejectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectBtnActionPerformed(evt);
            }
        });

        orderFilter.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        orderFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Pending", "Approved", "Rejected"}));
        orderFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderFilterActionPerformed(evt);
            }
        });

        btnEditPO.setFont(new java.awt.Font("sansserif", 0, 20)); // NOI18N
        btnEditPO.setText("Edit Purchase Order");
        btnEditPO.setPreferredSize(new java.awt.Dimension(250, 50));
        btnEditPO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPOActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel3.setText("Search:");

        searchPOField.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        searchPOField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchPOFieldKeyReleased(evt);
            }
        });

        btnView.setFont(new java.awt.Font("sansserif", 0, 20)); // NOI18N
        btnView.setText("View");
        btnView.setPreferredSize(new java.awt.Dimension(86, 33));
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 413, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(544, 544, 544))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_order_list, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_req_list, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_inventory_list, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPayment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnProfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(approveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(rejectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnEditPO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(searchPOField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(322, 322, 322)
                                        .addComponent(orderFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1))))))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_order_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(btn_req_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(btn_inventory_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(btnPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(0, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditPO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchPOField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rejectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(approveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_order_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_order_listActionPerformed
        this.setVisible(true);
    }//GEN-LAST:event_btn_order_listActionPerformed

    private void btn_req_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_req_listActionPerformed
        new fm_purchase_requisitions().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_req_listActionPerformed

    private void btn_inventory_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inventory_listActionPerformed
        new fm_inventory().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_inventory_listActionPerformed

    private void btnPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaymentActionPerformed
         new fm_payment().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnPaymentActionPerformed

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        new fm_finance_report().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnReportActionPerformed

    private void btnProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfileActionPerformed
        new fm_profile().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnProfileActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose();
        new fm_mainpage().setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void approveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveBtnActionPerformed
        String password = JOptionPane.showInputDialog("Please enter your credential before approving the Purchase Order");
        if (password == null || !password.equals(SessionManager.getInstance().password)){
            JOptionPane.showMessageDialog(this, 
                    "Wrong password entered, you are not allowed to APPROVE the Purchase Order", 
                    "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int selected_row = orderTable.getSelectedRow();
        if (selected_row != -1) {
            String order_status = String.valueOf(model.getValueAt(selected_row, 10));
            if (order_status.equals("Pending")) {
                int choice = JOptionPane.showConfirmDialog(this, "Are you sure you want to approve the purchase order?", "Confirmation Alert", JOptionPane.YES_NO_OPTION); 
                if (choice == JOptionPane.YES_OPTION) {
                    String[] ls = new String[9];
                    String order_id = orderTable.getValueAt(selected_row, 0).toString();
                    Edit.editingColumn("PO", order_id, 9, "Approved");
                    model.setValueAt("Approved", selected_row, 10);
                    ls[0] = order_id;
                    ls[1] = orderTable.getValueAt(selected_row, 2).toString();
                    ls[2] = Search.getItemNamebyItemID(ls[1]); //item name
                    ls[3] = Search.getFromPO(ls[0], 4); //quantity
                    ls[4] = Search.getFromPO(ls[0], 6); //total amount
                    ls[5] = "-";
                    ls[6] = "Not Received";
                    ls[7] = "-";
                    ls[8] = "-";
                    TextFile.addLine("src/main/java/com/mycompany/JavaY2/TextFile/receives", String.join("|", ls));
                    JOptionPane.showMessageDialog(this, "You have approved the Purchase Order successfully", "Successful", JOptionPane.INFORMATION_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(this, "This Purchase Order has already been approved or rejected", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Please select a purchase order to approve", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_approveBtnActionPerformed

    private void rejectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectBtnActionPerformed
        String password = JOptionPane.showInputDialog("Please enter your credential before rejecting the Purchase Order");
        if (password == null || !password.equals(SessionManager.getInstance().password)){
            JOptionPane.showMessageDialog(this, 
                    "Wrong password entered, you are not allowed to REJECT the Purchase Order", 
                    "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int selected_row = orderTable.getSelectedRow();
        if (selected_row != -1){
            String order_status = String.valueOf(model.getValueAt(selected_row, 10));
            if (order_status.equals("Pending")) {
                int choice = JOptionPane.showConfirmDialog(this, "Are you sure you want to reject the purchase order?", "Confirmation Alert", JOptionPane.YES_NO_OPTION); 
                if(choice == JOptionPane.YES_OPTION){
                    String order_id = orderTable.getValueAt(selected_row, 0).toString();
                    Edit.editingColumn("PO", order_id, 9, "Rejected"); 
                    model.setValueAt("Rejected",selected_row, 10); 
                    JOptionPane.showMessageDialog(this, "You Have Rejected The Purchase Order Sucessfully", "Successful", JOptionPane.INFORMATION_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(this, "This Purchase Order has already been approved or rejected", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Please select a purchase order to reject", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_rejectBtnActionPerformed

    private void orderFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderFilterActionPerformed
        TableRowSorter<DefaultTableModel> orderStatus = new TableRowSorter<>(model);
        orderTable.setRowSorter(orderStatus);
        String selected_status = orderFilter.getSelectedItem().toString();
        switch (selected_status){
            case "Pending" -> orderStatus.setRowFilter(RowFilter.regexFilter("(?i)^" + selected_status + "$", 10));
            case "Approved" -> orderStatus.setRowFilter(RowFilter.regexFilter("(?i)^" + selected_status + "$", 10));
            case "Rejected" -> orderStatus.setRowFilter(RowFilter.regexFilter("(?i)^" + selected_status + "$", 10));
            case "All" -> orderStatus.setRowFilter(null);
            default -> {}
        }
    }//GEN-LAST:event_orderFilterActionPerformed

    private void btnEditPOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPOActionPerformed
        String password = JOptionPane.showInputDialog("Please enter your credential before editing the Purchase Order");
        if (password == null || !password.equals(SessionManager.getInstance().password)){
            JOptionPane.showMessageDialog(this, 
                    "Wrong password entered, you are not allowed to EDIT the Purchase Order", 
                    "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int selectedRow = orderTable.getSelectedRow();
        
        if(selectedRow != -1){
            String orderStatus = String.valueOf(model.getValueAt(selectedRow, 10));
            if(orderStatus.equals("Pending")){
                String orderID = String.valueOf(model.getValueAt(selectedRow, 0));
                String itemID = String.valueOf(model.getValueAt(selectedRow, 2));
                String itemName = Search.getItemNamebyItemID(itemID); //items.txt
                int quantity = Integer.parseInt(String.valueOf(model.getValueAt(selectedRow, 5))); 
                double unit_price = Double.parseDouble(String.valueOf(model.getValueAt(selectedRow, 6)));
                double total_amount = Double.parseDouble(String.valueOf(model.getValueAt(selectedRow, 7)));
                String supplierID = String.valueOf(model.getValueAt(selectedRow, 8));
                
                PurchaseOrder po = new PurchaseOrder(orderID, itemID, itemName, quantity, unit_price, total_amount, supplierID);
            
                new fm_edit_PO(po).setVisible(true);
            }else {
                JOptionPane.showMessageDialog(this, 
                        "You can only modified the Quantity and Supplier Name when the order status in Purchase Order is Pending",
                        "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }else{
            JOptionPane.showMessageDialog(this, 
                    "Please select the Purchase Order before you modify the Quantity or the Supplier", 
                    "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        this.dispose();
    }//GEN-LAST:event_btnEditPOActionPerformed

    private void orderTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderTableMouseReleased

    }//GEN-LAST:event_orderTableMouseReleased

    private void searchPOFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchPOFieldKeyReleased
        TableRowSorter<DefaultTableModel> search = new TableRowSorter<>(model);
        orderTable.setRowSorter(search);
        search.setRowFilter(RowFilter.regexFilter(searchPOField.getText()));
    }//GEN-LAST:event_searchPOFieldKeyReleased

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        int selected_row = orderTable.getSelectedRow();
        if (selected_row == -1){
            JOptionPane.showMessageDialog(null, "Please select a Purchase Order to view", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        new fm_view_PO(orderTable.getValueAt(selected_row,0).toString()).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnViewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fm_purchase_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fm_purchase_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fm_purchase_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fm_purchase_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fm_purchase_order().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveBtn;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnEditPO;
    private javax.swing.JButton btnPayment;
    private javax.swing.JButton btnProfile;
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btn_inventory_list;
    private javax.swing.JButton btn_order_list;
    private javax.swing.JButton btn_req_list;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> orderFilter;
    private javax.swing.JTable orderTable;
    private javax.swing.JButton rejectBtn;
    private javax.swing.JTextField searchPOField;
    // End of variables declaration//GEN-END:variables
}
